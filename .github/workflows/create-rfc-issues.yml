name: Create RFC Issues for Copilot

# Manually trigger this workflow to create all RFC implementation issues
on:
  workflow_dispatch:
    inputs:
      create_milestone:
        description: 'Create RFC Implementation Phase milestone'
        required: true
        default: true
        type: boolean
      assignee_login:
        description: 'Optional login to assign all created RFC issues to (e.g., an agent account)'
        required: false
        type: string

permissions:
  issues: write
  contents: read

jobs:
  create-rfc-issues:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Create RFC Implementation Phase milestone (optional)
      if: ${{ inputs.create_milestone }}
      run: |
        gh --repo "${{ github.repository }}" api repos/${{ github.repository }}/milestones \
          --method POST \
          --field title="RFC Implementation Phase" \
          --field description="Implementation of all 9 RFC specifications for the dungeon crawler game" \
          --field state="open" || echo "Milestone may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
    
    - name: Prepare assignee flag
      id: assign
      run: |
        ASSIGNEE='${{ inputs.assignee_login }}'
        if [ -n "$ASSIGNEE" ]; then
          echo "flag=--assignee \"$ASSIGNEE\"" >> $GITHUB_OUTPUT
        else
          echo "flag=" >> $GITHUB_OUTPUT
        fi

    - name: Create RFC001 - Core Game Loop
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC001: Core Game Loop & State Management" \
          --body-file .github/issue-templates/rfc001-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC002 - Terminal Application Shell
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC002: Terminal.Gui Application Shell" \
          --body-file .github/issue-templates/rfc002-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC003 - Map Generation System
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC003: Map Generation & Rendering System" \
          --body-file .github/issue-templates/rfc003-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC004 - Player Movement System
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC004: Player Entity & Movement System" \
          --body-file .github/issue-templates/rfc004-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC006 - Basic Inventory
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC006: Basic Inventory System" \
          --body-file .github/issue-templates/rfc006-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC007 - Message Log UI
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC007: Simple Message Log UI" \
          --body-file .github/issue-templates/rfc007-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC008 - Save Game System
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC008: Save Game Data System" \
          --body-file .github/issue-templates/rfc008-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC009 - Simple Enemy AI
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC009: Simple Enemy AI" \
          --body-file .github/issue-templates/rfc009-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create RFC010 - Health Status Bar
      run: |
        gh --repo "${{ github.repository }}" issue create \
          --title "Implement RFC010: Health and Status Bar UI" \
          --body-file .github/issue-templates/rfc010-body.md \
          --milestone "RFC Implementation Phase" \
          --label rfc-implementation \
          ${{ steps.assign.outputs.flag }} || echo "Issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
    
    - name: Create summary comment
      run: |
        echo "## ðŸŽ‰ RFC Issues Created!" > summary.md
        echo "" >> summary.md
        echo "All 9 RFC implementation issues have been created and are ready for agent assignment." >> summary.md
        echo "" >> summary.md
        echo "### ðŸš€ Next Steps:" >> summary.md
        echo "1. **Assign to an Agent**: Optionally assign these to a bot/app or human reviewer" >> summary.md
        echo "2. **Start with Foundation**: Begin with RFC001 and RFC002 (high priority)" >> summary.md
        echo "3. **Monitor Progress**: Watch for draft pull requests from Copilot" >> summary.md
        echo "4. **Review and Iterate**: Provide feedback on Copilot's implementation" >> summary.md
        echo "" >> summary.md
        echo "### ðŸ“‹ Issue Priority Order:" >> summary.md
        echo "- **ðŸ”¥ Foundation (Start First)**: RFC001, RFC002" >> summary.md
        echo "- **âš¡ Core Gameplay**: RFC003, RFC004, RFC009" >> summary.md  
        echo "- **ðŸŽ¨ Features**: RFC006, RFC007, RFC008, RFC010" >> summary.md
        echo "" >> summary.md
        echo "See AI-REVIEWERS.md for Gemini usage and review policies." >> summary.md
        
        gh --repo "${{ github.repository }}" issue create \
          --title "ðŸ¤– RFC Issues Created - Ready for Assignment" \
          --body-file summary.md \
          --milestone "RFC Implementation Phase" || echo "Summary issue may already exist"
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Workflow completion message
      run: |
        echo "âœ… All RFC issues created successfully!"
        echo "ðŸŽ¯ Go to Issues tab to assign specific RFCs to your preferred agent"
        echo "ðŸ“– See AI-REVIEWERS.md for next steps"