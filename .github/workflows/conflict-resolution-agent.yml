name: Conflict Resolution Agent

on:
  workflow_dispatch:
    inputs:
      pr_numbers:
        description: 'PR numbers to resolve conflicts for (e.g., 8,10) or "all"'
        required: true
        default: 'all'
        type: string
  schedule:
    - cron: '30 3 * * *'

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  resolve-conflicts:
    runs-on: ubuntu-latest
    
    steps:
    - name: Get GitHub App token
      id: app-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ secrets.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}

    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ github.token }}
        
    - name: Find conflicted PRs
      id: find-conflicts
      run: |
        echo "Scanning for conflicted pull requests..."
        
        INPUT_PRS='${{ github.event.inputs.pr_numbers || 'all' }}'
        
        if [ "$INPUT_PRS" = "all" ]; then
          CONFLICTED_PRS=$(gh --repo "${{ github.repository }}" pr list --state=open --json number,mergeable --jq '.[] | select(.mergeable == "CONFLICTING") | .number' | tr '\n' ',' | sed 's/,$//')
        else
          CONFLICTED_PRS="$INPUT_PRS"
        fi
        
        echo "conflicted_prs=$CONFLICTED_PRS" >> $GITHUB_OUTPUT
        
        if [ -z "$CONFLICTED_PRS" ]; then
          echo "No conflicted PRs found"
          echo "has_conflicts=false" >> $GITHUB_OUTPUT
        else
          echo "Found conflicted PRs: $CONFLICTED_PRS"
          echo "has_conflicts=true" >> $GITHUB_OUTPUT
        fi
        
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}
        
    - name: Label and post guidance
      if: steps.find-conflicts.outputs.has_conflicts == 'true'
      run: |
        echo "Processing conflicted PRs..."
        
        CONFLICTED_PRS='${{ steps.find-conflicts.outputs.conflicted_prs }}'
        IFS=',' read -ra PR_ARRAY <<< "$CONFLICTED_PRS"
        
        for pr_num in "${PR_ARRAY[@]}"; do
          pr_num=$(echo "$pr_num" | xargs)
          
          if [ -z "$pr_num" ]; then
            continue
          fi
          
          echo "Processing PR #$pr_num..."
          
          # Get PR details
          PR_INFO=$(gh --repo "${{ github.repository }}" pr view "$pr_num" --json headRefName,author --jq '{branch: .headRefName, author: .author.login}')
          BRANCH_NAME=$(echo "$PR_INFO" | jq -r '.branch')
          PR_AUTHOR=$(echo "$PR_INFO" | jq -r '.author')
          
          # Add or ensure merge-conflict label
          gh --repo "${{ github.repository }}" pr edit "$pr_num" --add-label "merge-conflict" || true
          
          # Post conflict resolution guidance
          gh --repo "${{ github.repository }}" pr comment "$pr_num" --body "ðŸ”§ Conflict Resolution Agent

This pull request currently has merge conflicts with the base branch.

Recommended steps:
1. Checkout branch: \`git checkout $BRANCH_NAME\`
2. Rebase against main: \`git fetch origin && git rebase origin/main\`
3. Resolve conflicts locally in the files shown by Git
4. Push updates: \`git push --force-with-lease\`

Notes:
- Keep commits small and focused.
- If CI fails after rebasing, re-run locally and adjust.

When conflicts are resolved, this label will be cleared automatically on the next run."
          
          echo "Posted guidance to PR #$pr_num"
          
        done
        
      env:
        GH_TOKEN: ${{ steps.app-token.outputs.token }}