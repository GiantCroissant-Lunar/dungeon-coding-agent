name: Call Trigger Scripts for Copilot Spawning

on:
  workflow_dispatch:
    inputs:
      script_type:
        description: 'Which trigger script to use'
        required: true
        type: choice
        options:
          - 'bash'
          - 'powershell'
        default: 'bash'
      issue_number:
        description: 'Issue number to trigger Copilot for'
        required: true
        type: number
      force_trigger:
        description: 'Force trigger even if already working'
        required: false
        type: boolean
        default: false

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:
  call-bash-script:
    name: Call Bash Trigger Script
    runs-on: ubuntu-latest
    if: github.event.inputs.script_type == 'bash'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Make script executable
        run: chmod +x ./trigger-copilot-rfc.sh

      - name: Run bash trigger script
        run: |
          FORCE_FLAG=""
          if [ "${{ github.event.inputs.force_trigger }}" == "true" ]; then
            FORCE_FLAG="--force"
          fi
          
          ./trigger-copilot-rfc.sh \
            --issue ${{ github.event.inputs.issue_number }} \
            --repo ${{ github.repository }} \
            $FORCE_FLAG
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

  call-powershell-script:
    name: Call PowerShell Trigger Script  
    runs-on: windows-latest
    if: github.event.inputs.script_type == 'powershell'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Run PowerShell trigger script
        shell: powershell
        run: |
          $ForceFlag = if ("${{ github.event.inputs.force_trigger }}" -eq "true") { $true } else { $false }
          
          .\trigger-copilot-rfc.ps1 `
            -IssueNumber ${{ github.event.inputs.issue_number }} `
            -Repository "${{ github.repository }}" `
            -Force:$ForceFlag
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

  summary:
    name: Execution Summary
    runs-on: ubuntu-latest
    needs: [call-bash-script, call-powershell-script]
    if: always()
    
    steps:
      - name: Create summary
        run: |
          echo "## 📜 Script Execution Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Script Type**: ${{ github.event.inputs.script_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Issue Number**: #${{ github.event.inputs.issue_number }}" >> $GITHUB_STEP_SUMMARY  
          echo "- **Force Trigger**: ${{ github.event.inputs.force_trigger }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.call-bash-script.result }}" == "success" ]; then
            echo "- **Bash Script**: ✅ Success" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.call-bash-script.result }}" == "failure" ]; then
            echo "- **Bash Script**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.call-bash-script.result }}" == "skipped" ]; then
            echo "- **Bash Script**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.call-powershell-script.result }}" == "success" ]; then
            echo "- **PowerShell Script**: ✅ Success" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.call-powershell-script.result }}" == "failure" ]; then
            echo "- **PowerShell Script**: ❌ Failed" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.call-powershell-script.result }}" == "skipped" ]; then
            echo "- **PowerShell Script**: ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          fi