name: Assign RFC Issues to Copilot

# Automatically assigns RFC implementation issues to GitHub Copilot Coding Agent
on:
  workflow_dispatch:
    inputs:
      issue_numbers:
        description: 'Comma-separated issue numbers to assign (e.g., 3,4,5) or "all" for all RFC issues'
        required: true
        default: 'all'
        type: string
      add_comment:
        description: 'Add implementation request comment'
        required: true
        default: true
        type: boolean

permissions:
  issues: write
  contents: read

jobs:
  assign-copilot:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Assign RFC issues to Copilot
      run: |
        echo "ü§ñ Assigning RFC issues to GitHub Copilot Coding Agent..."
        
        INPUT_ISSUES="${{ github.event.inputs.issue_numbers }}"
        ADD_COMMENT="${{ github.event.inputs.add_comment }}"
        
        # Get all RFC issue numbers if "all" specified
        if [ "$INPUT_ISSUES" = "all" ]; then
          echo "üìã Finding all RFC issues..."
          RFC_ISSUES=$(gh issue list --state=open --json number,title --jq '.[] | select(.title | contains("RFC")) | .number' | tr '\n' ',' | sed 's/,$//')
          echo "Found RFC issues: $RFC_ISSUES"
          ISSUE_NUMBERS="$RFC_ISSUES"
        else
          ISSUE_NUMBERS="$INPUT_ISSUES"
        fi
        
        # Convert comma-separated string to array
        IFS=',' read -ra ISSUES <<< "$ISSUE_NUMBERS"
        
        SUCCESS_COUNT=0
        FAILED_ISSUES=()
        
        for issue_num in "${ISSUES[@]}"; do
          # Trim whitespace
          issue_num=$(echo "$issue_num" | xargs)
          
          if [ ! -z "$issue_num" ]; then
            echo "üéØ Processing Issue #$issue_num..."
            
            # Get issue title for context
            ISSUE_TITLE=$(gh issue view "$issue_num" --json title --jq '.title' 2>/dev/null || echo "Unknown")
            echo "  Title: $ISSUE_TITLE"
            
            # Skip if not an RFC issue
            if [[ ! "$ISSUE_TITLE" =~ RFC ]]; then
              echo "  ‚ö†Ô∏è Skipping - not an RFC issue"
              continue
            fi
            
            # Check if already assigned to Copilot
            CURRENT_ASSIGNEES=$(gh issue view "$issue_num" --json assignees --jq '.assignees | length' 2>/dev/null || echo "0")
            
            if [ "$CURRENT_ASSIGNEES" -gt 0 ]; then
              echo "  ‚ÑπÔ∏è Issue already has assignee(s) - checking if Copilot is assigned"
              COPILOT_ASSIGNED=$(gh issue view "$issue_num" --json assignees --jq '.assignees[] | select(.login == "Copilot") | .login' 2>/dev/null || echo "")
              
              if [ "$COPILOT_ASSIGNED" = "Copilot" ]; then
                echo "  ‚úÖ Copilot already assigned"
              else
                echo "  üîÑ Adding Copilot as additional assignee"
                if gh issue edit "$issue_num" --add-assignee copilot-swe-agent; then
                  echo "  ‚úÖ Successfully assigned Copilot"
                  SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
                else
                  echo "  ‚ùå Failed to assign Copilot"
                  FAILED_ISSUES+=("$issue_num")
                fi
              fi
            else
              # No assignees, assign Copilot
              echo "  üîÑ Assigning Copilot to unassigned issue"
              if gh issue edit "$issue_num" --add-assignee copilot-swe-agent; then
                echo "  ‚úÖ Successfully assigned Copilot"
                SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
              else
                echo "  ‚ùå Failed to assign Copilot"
                FAILED_ISSUES+=("$issue_num")
              fi
            fi
            
            # Add implementation request comment if enabled
            if [ "$ADD_COMMENT" = "true" ]; then
              # Extract RFC number from title
              RFC_NUM=$(echo "$ISSUE_TITLE" | grep -o 'RFC[0-9]\+' | head -1)
              RFC_FILE="docs/RFC/${RFC_NUM}-*.md"
              
              # Find the actual RFC file
              RFC_PATH=$(find docs/RFC/ -name "${RFC_NUM}*.md" | head -1 || echo "docs/RFC/${RFC_NUM}.md")
              
              COMMENT_BODY="@copilot Please implement this RFC according to the specification in \`${RFC_PATH}\`.

**Implementation Requirements:**
- Create feature branch: \`feature/$(echo ${RFC_NUM} | tr '[:upper:]' '[:lower:]')-implementation\`
- Follow all acceptance criteria in the RFC specification
- Implement comprehensive unit and integration tests
- Update RFC status from Draft ‚Üí In Progress ‚Üí Complete
- Open pull request when implementation is ready

**Key Guidelines:**
- Review \`AGENTS.md\` for coding standards and architecture patterns
- Use Arch ECS framework and .NET 8 patterns as specified
- Ensure >80% test coverage for implemented functionality
- Follow the project's established patterns and conventions

Ready to start implementation! üöÄ"

              echo "  üí¨ Adding implementation request comment..."
              if gh issue comment "$issue_num" --body "$COMMENT_BODY"; then
                echo "  ‚úÖ Implementation comment added"
              else
                echo "  ‚ö†Ô∏è Failed to add comment (assignment still succeeded)"
              fi
            fi
            
            echo "  ‚ú® Issue #$issue_num processing complete"
            echo
          fi
        done
        
        # Summary
        echo "üéâ Assignment Summary:"
        echo "  ‚úÖ Successfully processed: $SUCCESS_COUNT issues"
        
        if [ ${#FAILED_ISSUES[@]} -gt 0 ]; then
          echo "  ‚ùå Failed issues: ${FAILED_ISSUES[*]}"
          exit 1
        else
          echo "  üöÄ All RFC issues successfully assigned to Copilot!"
        fi
        
      env:
        GH_TOKEN: ${{ github.token }}
        
    - name: Create assignment summary issue
      if: success()
      run: |
        cat > assignment_summary.md << 'EOF'
        ## ü§ñ GitHub Copilot Agent Assignment Complete
        
        **Timestamp**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
        **Workflow Run**: ${{ github.run_id }}
        
        ### ‚úÖ Assignment Results
        All specified RFC issues have been successfully assigned to GitHub Copilot Coding Agent.
        
        ### üîç Monitor Progress
        Use the progress monitoring tools to track implementation:
        ```bash
        # Check agent activity
        ./check-agent-progress.sh
        
        # Monitor specific issue
        gh issue view <issue-number> --comments
        
        # Watch for feature branches
        git branch -r | grep feature/rfc
        
        # Check for pull requests
        gh pr list --author=copilot-swe-agent
        ```
        
        ### üìã Expected Timeline
        - **Feature Branch Creation**: Within 15-30 minutes
        - **Initial Implementation**: 2-6 hours per RFC
        - **Pull Request Creation**: When implementation complete
        - **Automated Review**: Coordination agent handles review/merge
        
        ### üöÄ Next Steps
        The fully automated agent-to-agent workflow is now active:
        1. **Implementation Agents** (Copilot) will create feature branches and implement RFCs
        2. **Coordination Agent** will automatically review and merge PRs that meet quality criteria
        3. **No human intervention required** unless quality thresholds aren't met
        
        **Sit back and watch the agents build your dungeon crawler! üêâ**
        EOF
        
        gh issue create \
          --title "üéØ Copilot Agents Assigned - Implementation Phase Started" \
          --body-file assignment_summary.md
          
      env:
        GH_TOKEN: ${{ github.token }}