name: PR Auto-Triage for Copilot

on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to triage manually'
        required: true
        type: string

permissions:
  pull-requests: write
  issues: write
  contents: read

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure labels exist
        run: |
          # Create labels if they don't exist
          gh --repo "${{ github.repository }}" label create copilot-pr --color FF7F50 --description "PR authored by GitHub Copilot agent" 2>/dev/null || echo "label copilot-pr exists"
          gh --repo "${{ github.repository }}" label create agent-work --color 1D76DB --description "Work authored by an AI agent" 2>/dev/null || echo "label agent-work exists"
        env:
          GH_TOKEN: ${{ github.token }}

  link-issue:
    runs-on: ubuntu-latest
    needs: triage
    permissions:
      pull-requests: write
      contents: read
      issues: read
    steps:
      - name: Get GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Append Closes #N when RFC issue can be inferred
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          PR_TITLE: ${{ github.event.pull_request.title }}
          PR_HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          set -euo pipefail
          if [ -z "${PR_NUMBER:-}" ]; then
            echo "Not a PR-triggered event; skipping."
            exit 0
          fi
          RFC=$(printf "%s" "$PR_TITLE" | grep -o 'RFC[0-9]\{3\}' | head -1 || true)
          if [ -z "$RFC" ]; then
            LOWER=$(printf "%s" "$PR_HEAD_REF" | tr 'A-Z' 'a-z')
            RFC_LOWER=$(printf "%s" "$LOWER" | grep -o 'rfc[0-9]\{3\}' | head -1 || true)
            if [ -n "$RFC_LOWER" ]; then RFC=$(printf "%s" "$RFC_LOWER" | tr 'a-z' 'A-Z'); fi
          fi
          if [ -z "$RFC" ]; then
            echo "No RFC detected; skipping."
            exit 0
          fi
          ISSUE_NUM=$(gh --repo "$REPO" issue list --state open --search "$RFC" --json number,title --jq '.[0].number' || echo "")
          if [ -z "$ISSUE_NUM" ] || [ "$ISSUE_NUM" = "null" ]; then
            echo "No open issue found for $RFC; skipping."
            exit 0
          fi
          BODY=$(gh --repo "$REPO" pr view "$PR_NUMBER" --json body --jq .body)
          if printf "%s" "$BODY" | grep -qi "Closes #$ISSUE_NUM"; then
            echo "Already linked to #$ISSUE_NUM"
            exit 0
          fi
          printf "%s\n\nCloses #%s\n" "$BODY" "$ISSUE_NUM" > /tmp/new_pr_body.md
          gh --repo "$REPO" pr edit "$PR_NUMBER" --body-file /tmp/new_pr_body.md
          echo "Linked PR #$PR_NUMBER to issue #$ISSUE_NUM"

      - name: Label PRs authored by Copilot (PR event)
        if: github.event_name == 'pull_request'
        run: |
          AUTHOR=${{ github.event.pull_request.user.login }}
          NUMBER=${{ github.event.pull_request.number }}
          TYPE=$(jq -r '.pull_request.user.type' "$GITHUB_EVENT_PATH")

          echo "PR #$NUMBER by $AUTHOR"

          # Add label if authored by Copilot (case-insensitive contains)
          if echo "$AUTHOR" | grep -iq copilot; then
            echo "Adding 'copilot-pr' label..."
            gh --repo "${{ github.repository }}" pr edit "$NUMBER" --add-label copilot-pr || true
            echo "Adding 'agent-work' label..."
            gh --repo "${{ github.repository }}" pr edit "$NUMBER" --add-label agent-work || true
          else
            # For other agent/bot authors, apply 'agent-work'
            if echo "$TYPE" | grep -iq "bot" || echo "$AUTHOR" | grep -Eiq '(agent|bot|ai|app\/)'; then
              echo "Adding 'agent-work' label for non-Copilot agent..."
              gh --repo "${{ github.repository }}" pr edit "$NUMBER" --add-label agent-work || true
            fi
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Label PRs authored by Copilot (manual dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          NUMBER='${{ inputs.pr_number }}'
          echo "Fetching PR #$NUMBER details..."
          AUTHOR=$(gh --repo "${{ github.repository }}" pr view "$NUMBER" --json author --jq .author.login)
          TYPE=$(gh --repo "${{ github.repository }}" pr view "$NUMBER" --json author --jq '.author.__typename' 2>/dev/null || echo "")

          echo "PR #$NUMBER by $AUTHOR (type=$TYPE)"

          if echo "$AUTHOR" | grep -iq copilot; then
            echo "Adding 'copilot-pr' + 'agent-work' labels..."
            gh --repo "${{ github.repository }}" pr edit "$NUMBER" --add-label copilot-pr || true
            gh --repo "${{ github.repository }}" pr edit "$NUMBER" --add-label agent-work || true
          else
            if echo "$AUTHOR" | grep -Eiq '(agent|bot|ai|app\/)' || echo "$TYPE" | grep -iq 'Bot\|App'; then
              echo "Adding 'agent-work' label for non-Copilot agent/bot/app..."
              gh --repo "${{ github.repository }}" pr edit "$NUMBER" --add-label agent-work || true
            else
              echo "Author appears human; no agent label applied."
            fi
          fi
        env:
          GH_TOKEN: ${{ github.token }}
